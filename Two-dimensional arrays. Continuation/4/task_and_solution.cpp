/*
Cамый дешёвый путь
В каждой клетке прямоугольной таблицы N×M записано некоторое число. Изначально игрок находится в левой верхней клетке. За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено). При проходе через клетку с игрока берут столько килограммов еды, какое число записано в этой клетке (еду берут также за первую и последнюю клетки его пути).

Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.

Входные данные
Вводятся два числа N и M — размеры таблицы 1⩽N⩽20,1⩽M⩽20. Затем идёт N строк по M чисел в каждой — размеры штрафов в килограммах за прохождение через соответствующие клетки (числа от 0 до 100).

Выходные данные
Выведите минимальный вес еды в килограммах, отдав которую можно попасть в правый нижний угол.

Примеры
Ввод
5 5
1 1 1 1 1
3 9 9 9 9
1 1 1 1 1
2 2 2 2 1
1 1 1 1 1

Вывод
11

*/

#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    n += 2;
    m += 2;
    vector <vector <int>> field(n, vector <int>(m, 1000));
    field[0][1] = field[1][0] = 0;

    for (int i = 1; i < n - 1; i++) {
        for (int j = 1; j < m - 1; j++) {
            cin >> field[i][j];
        }
    }
	
    for (int i = 1; i < n - 1; i++) {
        for (int j = 1; j < m - 1; j++) {
            field[i][j] = min(field[i - 1][j], field[i][j - 1]) + field[i][j];
        }
    }
    cout << field[n-2][m-2];
}
