/*
Сокращение последовательности
Дана последовательность натуральных чисел. Найдите наибольший общий делитель всех элементов последовательности и сократите все её члены на него.

Решение оформите в виде функции bool isDivisor(vector<int> &A, int d), проверяющей, является ли число d общим делителем последовательности, и функции void reduction(vector<int> &A), которая находит наибольший общий делитель и сокращает все члены последовательности на него.

Входные данные
В первой строке входных данных записано натуральное число n (n⩽100) — количество элементов последовательности. В следующей строке даны n натуральных чисел, не превышающих 10000, — элементы последовательности.

Выходные данные
Выведите n чисел — итоговую последовательность.

Примеры
Ввод
5
3 6 9 12 18

Вывод
1 2 3 4 6 

Ввод
2
57 179

Вывод
57 179 

*/

{
  for (int j = 0; j < A.size(); ++j) {
    if (A[j] % d != 0) {
      return false;
    }
  }
  return true;
}

void reduction(vector <int> &A) {
    for (int i = A[0]; i > 0; --i) {
        if (isDivisor(A, i)) {
            for (int j = 0; j < A.size(); ++j) {
                A[j] /= i;
            }
            break;
        }
    }
}