/*
Домашнее задание
Петя успевает по математике лучше всех в классе, поэтому учитель дал ему сложное домашнее задание, в котором нужно в заданном наборе целых чисел найти сумму всех положительных элементов, затем найти, где в заданной последовательности находятся максимальный и минимальный элементы, и вычислить произведение чисел, расположенных в этой последовательности между ними. Также известно, что минимальный и максимальный элементы встречаются в заданном множестве чисел только один раз и не являются соседними. Поскольку задач такого рода учитель дал Пете около ста, то Петя как сильный программист смог написать программу, которая по заданному набору чисел самостоятельно находит решение. А вам слабо?

Входные данные
В первой строке записано единственное число N (N⩽15) — количество элементов массива. Вторая строка содержит N целых чисел, представляющих заданный массив. Все элементы массива разделены пробелами. Каждое из чисел во входном файле, в том числе и N, не превышает 20 по абсолютной величине.

Выходные данные
В единственную строку нужно вывести два числа, разделённые пробелом: сумму положительных элементов и произведение чисел, расположенных между минимальным и максимальным элементами. Значения суммы и произведения не превышают по модулю 10^6.

Примеры
Ввод
5
-1 -10 2 6 7

Вывод
15 12

*/

#include <iostream>
#include <vector>

using namespace std;

int main() {
    int n;
    cin >> n;
    vector <int> numbers(n);
    int sum_num = 0;
    for (int i = 0; i < n; i++) {
        int temp;
        cin >> temp;
        numbers[i] = temp;
        if (temp > 0) {
            sum_num += temp;
        }
    }

    int min_num = 0;
    int max_num = 0;
    for (int i = 0; i < n; i++) {
        if (numbers[i] > numbers[max_num]) {
            max_num = i;
        }
        else if (numbers[i] < numbers[min_num]) {
            min_num = i;
        }
    }

    //cout << min_num << " " << max_num;
    if (min_num > max_num) {
        swap(min_num, max_num);
    }
    int mult_num = 1;

    for (int i = min_num + 1; i < max_num; i++) {
        mult_num *= numbers[i];
    }
    
    cout << sum_num << " " << mult_num;
}

